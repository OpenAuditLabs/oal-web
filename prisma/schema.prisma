// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String   @db.VarChar(255)
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  projects  Project[]
}

enum Role {
  USER
  ADMIN
}

// Project owned by a User. Name unique. Tracks file count.
model Project {
  id          String   @id @default(cuid())
  name        String   
  description String?
  ownerId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  owner       User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  audits      Audit[]

  @@index([ownerId])
}

enum AuditStatus {
  QUEUED
  RUNNING
  COMPLETED
  FAILED
}

// Audit belonging to a Project. Tracks processing progress and file count snapshot.
model Audit {
  id        String      @id @default(cuid())
  status    AuditStatus @default(QUEUED)
  projectId String
  fileCount Int         @default(0)
  progress  Float       @default(0) // 0-100 percentage
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  project   Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
}